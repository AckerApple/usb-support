{"version":3,"sources":["../src/shared/enums.ts","./src/app/mapController.function.ts","./src/environments/environment.ts","../src/shared/delayLog.function.ts","./src/app/app.utils.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","../node_modules/moment-mini/locale sync ^\\.\\/.*$","./src/app/relayPositions.ts","../src/shared/index.utils.ts","../src/shared/decodeControllerButtonStates.function.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum SocketMessageType {\n  // client side\n  UNSUBSCRIBEDEVICE = 'unsubscribeDevice',\n  LISTENTODEVICE = 'listenToDevice',\n  WRITETODEVICE = 'writeToDevice',\n  REFRESH = 'refresh',\n  GETSAVEDCONTROLLERS = 'getSavedControllers',\n  SAVECONTROLLERS = 'save_controllers',\n\n  // server side\n  DEVICEEVENT_CHANGE = 'deviceEvent.change',\n  LISTENERS = 'listeners',\n  SAVEDCONTROLLERS = 'savedControllers',\n  DEVICES = 'devices',\n  ERROR = 'error',\n}\n","import delayLog from \"../../../src/shared/delayLog.function\";\nimport { Subject, Subscription } from \"rxjs\";\nimport { GameControlEvents } from \"../../../src/shared/GameControlEvents\";\n\nexport default function mapController(\n  gameController: GameControlEvents\n): Promise<void> {\n  return new Promise(res => () => {\n    const subs = new Subscription()\n    const gcChangeListener = new GameControlChangeListener(gameController)\n\n    this.subs.add(\n      gameController.notIdle.subscribe(() => gcChangeListener.handler()),\n      gcChangeListener.completed.subscribe(() => {\n        subs.unsubscribe()\n        res()\n      })\n    )\n\n    gcChangeListener.askForButton()\n  })\n}\n\nclass GameControlChangeListener {\n  completed: Subject<void> = new Subject()\n\n  constructor(public gameController: GameControlEvents) {}\n\n  getNextQuestion() {\n    return Object.keys(this.gameController.map).find(\n      (key) => this.gameController.map[key] === null\n    )\n  }\n\n  askForButton() {\n    const key = this.getNextQuestion();\n    delayLog(\"\\x1b[36mPush the \" + key + \" key\\x1b[0m\");\n  }\n\n  // listener from button press\n  handler (): Promise<void> {\n    const data = this.gameController.lastData\n    const key = this.getNextQuestion()\n    const diffs = this.gameController.filterIdleDifferences(data)\n    const diffKeys = Object.keys(diffs)\n    const map = this.gameController.map\n\n    if (diffKeys.length === 0) {\n      return;\n    } else if (diffKeys.length > 1) {\n      console.log(\"multiple buttons activated\");\n    } else {\n      const pos = Number(diffKeys[0])\n      const value = diffs[diffKeys[0]]\n      const alreadySet = Object.keys(map).find((key) =>\n        map[key] && map[key].pos === pos && map[key].value === value\n      );\n\n      if (alreadySet) {\n        console.log(\"Key already set: \" + alreadySet, { pos, value });\n      } else {\n        this.gameController.map[key] = {\n          pos, value, idle: this.gameController.idle[pos], updatedAt: Date.now()\n        }\n        // console.log(gameController.map);\n        console.log(\"SAVED KEY: \" + key + \" as \", { pos, value })\n      }\n    }\n\n    console.log();\n\n    if (this.getNextQuestion()) {\n      this.askForButton()\n    } else {\n      console.log(\"Buttons mapped\", this.gameController.map);\n      this.completed.next()\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export default function delayLog(...args: any[]) {\nsetTimeout(() => console.log(...args), 300);\n}\n","import { DeviceProductLayout, IDeviceMeta } from '../../../src/shared/typings'\n\nexport interface IDeviceMetaState extends DeviceProductLayout {\n  subscribed?: boolean\n  recording?: boolean\n  lastEvent?: number[]\n  ignoreBits?: number[]\n  pressed?: string[] // populated if matched to savedController\n}\n\nexport const testController: IDeviceMeta = {\n  path: 'test-path',\n  interface: -1,\n  usage: -1,\n  usagePage: -1,\n  productId: -1,\n  vendorId: -32,\n  product: 'test-product',\n  manufacturer: 'test-manu',\n}\n\nexport interface DebugData {\n  devices?: boolean // reveal debugging for non-controllers\n  controllers?: boolean // reveal debugging for controllers\n  state: 'initializing' | 'constructing' | 'constructed' | 'message-received' | 'socket opened'\n  messages: number\n  url: string\n  socket: Record<string, any>,\n  lastWssData: Record<string, any>,\n  lastPayload: Record<string, any>,\n  lastLogs: {\n    info: Record<string, any>\n    error?: Record<string, any>\n  }\n}\n\nexport function download(filename:string, text: string) {\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function copyText(text: string) {\n  /* Get the text field */\n  var copyText = document.createElement('textarea');\n  copyText.value = text\n  document.body.appendChild(copyText)\n\n  /* Select the text field */\n  copyText.select();\n  copyText.setSelectionRange(0, 99999); /* For mobile devices */\n\n  /* Copy the text inside the text field */\n  document.execCommand(\"copy\");\n\n  document.body.removeChild(copyText)\n  // copyText.parentNode.removeChild(copyText)\n}\n","import { Component } from '@angular/core'\nimport { DeviceProductLayout, ControllerConfigs, WssMessage, IDeviceMeta } from '../../../src/shared/typings'\nimport { SocketMessageType } from '../../../src/shared/enums'\nimport GameControlEvents from '../../../src/shared/GameControlEvents'\nimport mapController from './mapController.function'\nimport { socketPort } from '../../../src/shared/config.json'\nimport { relayOn, relayOff } from './relayPositions'\nimport { getDeviceLabel, getControlConfigByDevice, eventsMatch, devicesMatch, isDeviceController } from '../../../src/shared/index.utils'\nimport decodeDeviceMetaState from '../../../src/shared/decodeControllerButtonStates.function'\nimport { ackExpose as ack } from 'ack-x/js/ack'\nimport { copyText, DebugData, download, IDeviceMetaState, testController } from './app.utils'\nimport { Device } from 'node-hid'\n\nconst socketHost = window.location.hostname\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webapp'\n  wsUrl = `ws://${socketHost}:${socketPort}`\n  connection: WebSocket\n  reconnectInterval: any = 4000\n\n  command = '0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00'\n  relayOn = relayOn\n  relayOff = relayOff\n\n  devices: IDeviceMetaState[] = []\n  listeners: IDeviceMetaState[] = []\n  controllers: IDeviceMeta[] = []\n  nonControllers: IDeviceMeta[] = []\n  savedControllers: ControllerConfigs = {}\n  savedController: DeviceProductLayout // One controller being reviewed\n\n  debug: DebugData = {\n    state: 'initializing',\n    messages: 0,\n    url: this.wsUrl,\n    socket: {},\n    lastWssData: {},\n    lastPayload: {},\n    lastLogs: {\n      info:{}\n    }\n  }\n\n  constructor() {\n    this.debug.state = 'constructing'\n    window.onerror = err => this.error(typeof(err) === 'string' ? new Error(err) : err)\n  }\n\n  ngOnInit(){\n    this.log('connecting to websocket', this.wsUrl)\n    try {\n      this.connect()\n      this.debug.state = 'constructed'\n      this.log('web socket connected')\n    } catch (err) {\n      this.error(err, {\n        message: 'Could not connect to web sockets',\n      })\n    }\n  }\n\n  reconnect() {\n    if (this.reconnectInterval) {\n      clearInterval(this.reconnectInterval)\n    }\n    \n    this.connect()\n\n    this.reconnectInterval = setInterval(() => {\n      this.log({message: 'attempting ws reconnect...'})\n      this.connect()\n    }, 3000)\n  }\n\n  connect() {\n    this.connection = new WebSocket(this.wsUrl)\n\n    this.connection.onopen = () => {\n      this.log('web socket handshake successful')\n      console.log('this.connection', this.connection)\n\n      if (this.reconnectInterval) {\n        clearInterval(this.reconnectInterval)\n        delete this.reconnectInterval\n      }\n\n      this.fetchUsbDevices()\n      this.fetchSavedControllers()\n      this.debug.state = 'socket opened'\n\n      this.connection.onclose = () => {\n        this.reconnect()\n      }\n    }\n\n    this.connection.onerror = (ev: Event): any => {\n      this.error(\n        'socket onerror',\n        ev,\n        {message: `Socket error`},\n      )\n    }\n\n    this.connection.onmessage = (e) => {\n      this.debug.state = 'message-received'\n      ++this.debug.messages\n\n      let data: WssMessage\n\n      try {\n        data = JSON.parse(e.data)\n        this.debug.lastWssData = data\n      } catch (err) {\n        // console.log('e.data', e)\n        this.error(err, 'client message failed');\n        (this.debug.socket as any).error = err\n      }\n\n      try {\n        this.handleMessage(data)\n      } catch (err) {\n        this.error({error:err, data}, `error executing message ${data.type}`);\n        throw err\n      }\n    }\n  }\n\n  mapController(controller: GameControlEvents) {\n    mapController(controller)\n  }\n\n  toggleDeviceRecord(deviceMeta: IDeviceMetaState) {\n    deviceMeta.recording = !deviceMeta.recording\n  }\n\n  devicesUpdate(data: IDeviceMeta[]) {\n    data.forEach((device, index) => {\n      this.devices[index] = this.devices[index] || {meta: device, map: {}}\n      this.devices[index].meta = device\n    })\n\n    const devices = this.devices.map(device => device.meta)\n    this.controllers = devices.filter(device => isDeviceController(device as Device))\n    this.nonControllers = devices.filter(device => !isDeviceController(device as Device))\n\n    this.log('🕹 controllers', this.controllers)\n    this.log('⌨️ other devices', this.nonControllers)\n  }\n\n  handleMessage(data: WssMessage) {\n    switch (data.type) {\n      case SocketMessageType.DEVICES:\n        this.devicesUpdate(data.data)\n        break;\n\n      case SocketMessageType.SAVEDCONTROLLERS:\n        if (data.data) {\n          this.savedControllers = data.data\n          this.log('💾 savedControllers', data.data)\n        }\n        break;\n\n      case SocketMessageType.LISTENERS:\n        this.onListeners(data.data)\n        break\n\n      case SocketMessageType.DEVICEEVENT_CHANGE:\n        this.onDeviceEventChange(data.data.event, data.data.device)\n        break\n\n      case SocketMessageType.ERROR:\n        this.error(data.data)\n        break\n\n      default:\n        this.warn('unknown event type', data.type)\n    }\n  }\n\n  onListeners(devices: IDeviceMeta[]) {\n    this.log({message: `listeners update received`, devices})\n    console.log('this.listeners ===========>> 0', this.listeners[0])\n    \n    this.listeners.length = devices.length\n\n    console.log('this.listeners ===========>> 1', this.listeners[0])\n\n    devices.forEach((device,index) => {\n      this.listeners[index] = this.listeners[index] || {\n        meta: device, subscribed: true, map: {}\n      }\n      \n      console.log('this.listeners[index] ------>', this.listeners[index])\n\n      const saved = this.getControlConfigByDevice(device)\n\n      console.log('saved ------>', saved)\n\n      if (saved) {\n        Object.assign(this.listeners[index], saved)\n      }\n\n      this.listeners[index].meta = device\n    })\n\n    this.controllers.forEach(controller => {\n      const find = this.listeners.find(lDevice =>\n        devicesMatch(controller, lDevice.meta)\n      )\n\n      if (find) {\n        return (controller as any).subscribed = true\n      }\n      delete (controller as any).subscribed\n    })\n\n  }\n\n  getControlConfigByDevice(device: IDeviceMeta): DeviceProductLayout | undefined {\n    return getControlConfigByDevice(this.savedControllers, device)\n  }\n\n  onDeviceEventChange(event: number[], device: IDeviceMeta) {\n    const matchedListener = this.listeners.find(\n      listener => devicesMatch(listener.meta, device)\n    )\n\n    // no match? no work to do\n    if (!matchedListener) {\n      return\n    }\n    matchedListener.lastEvent = event\n    const listener = this.getDeviceListener(device)\n    if (listener) {\n      this.processDeviceUpdate(matchedListener)\n    }\n  }\n\n  getDeviceListener(device: IDeviceMeta): IDeviceMetaState | undefined {\n    return this.listeners.find(listener => devicesMatch(listener.meta, device))\n  }\n\n  processDeviceUpdate(matchedListener: IDeviceMetaState) {\n    const pressedKeyNames = decodeDeviceMetaState(matchedListener, matchedListener.lastEvent)\n    matchedListener.pressed = pressedKeyNames\n    matchedListener.map = matchedListener.map || {}\n\n    if(matchedListener.recording && !pressedKeyNames.length) {\n      this.recordDeviceEvent(matchedListener)\n    }\n\n    // loop each known button and set its pressed property\n    Object.entries(matchedListener.map).forEach(([key, buttonMap]) => {\n      buttonMap.pressed = pressedKeyNames.includes(key)\n    })\n\n    ;(document.getElementById('buttonChangeAudio') as any).play()\n  }\n\n  recordDeviceEvent(matchedListener: IDeviceMetaState) {\n    const idleMap = matchedListener.idle\n    const pressedKeyNames = matchedListener.pressed\n    const isIdle = eventsMatch(matchedListener.lastEvent, idleMap)\n    if (isIdle) {\n      return\n    }\n\n    const event = matchedListener.lastEvent\n    for (let index = event.length - 1; index >= 0; --index) {\n      if (event[index] != idleMap[index]) {\n        matchedListener.map[`unknown${Object.keys(matchedListener.map).length}`] = {\n          pos: index,\n          value: event[index],\n          idle: idleMap[index],\n          updatedAt: Date.now(),\n        }\n      }\n    }\n\n    console.log('5 recording event came in', {\n      map: matchedListener.map, pressedKeyNames, lastEvent:matchedListener.lastEvent\n    })\n  }\n\n  confirmDeleteController(controller: DeviceProductLayout) {\n    if (!confirm(`confirm delete ${getDeviceLabel(controller.meta)}`)) {\n      return\n    }\n\n    const vendorId = String(controller.meta.vendorId)\n    const productId = String(controller.meta.productId)\n    const products = this.savedControllers[vendorId]\n    delete products[productId]\n\n    this.saveControllers()\n  }\n\n  saveController(controller: IDeviceMetaState) {\n    const vendorId = controller.meta.vendorId\n    const products = this.savedControllers[vendorId] = this.savedControllers[vendorId] || {}\n    const productId = controller.meta.productId\n\n    const saveData = controllerSaveFormat(controller)\n    products[productId] = saveData // update local info\n\n    this.saveControllers()\n  }\n\n  saveControllers() {\n    const controllers: ControllerConfigs = {}\n\n    Object.keys(this.savedControllers).forEach(vendorId => {\n      const products = this.savedControllers[vendorId]\n      controllers[vendorId] = controllers[vendorId] || {}\n\n      Object.keys(products).forEach(productId => {\n        const product = this.savedControllers[vendorId][productId]\n        controllers[vendorId][productId] = controllerSaveFormat(product)\n      });\n    });\n\n    this.wssSend(SocketMessageType.SAVECONTROLLERS, controllers)\n  }\n\n  addTestController() {\n    this.controllers.push(testController)\n    this.devices.push({\n      map: {},\n      subscribed: false,\n      lastEvent: [],\n      meta: testController\n    })\n  }\n\n  fetchSavedControllers() {\n    this.wssSend(SocketMessageType.GETSAVEDCONTROLLERS)\n  }\n\n  wssSend(type: SocketMessageType, data?: any) {\n    const payload = {type, data}\n    this.debug.lastPayload = payload\n    this.connection.send(JSON.stringify(payload))\n    return this\n  }\n\n  fetchUsbDevices() {\n    this.wssSend(SocketMessageType.REFRESH)\n  }\n\n  getSavedControllers() {\n    this.wssSend(SocketMessageType.GETSAVEDCONTROLLERS)\n  }\n\n  writeToDevice(device: IDeviceMetaState, command: number[]) {\n    this.wssSend(SocketMessageType.WRITETODEVICE, {device: device.meta, command})\n  }\n\n  writeToDeviceByString(device: IDeviceMetaState, command: string[]) {\n    const sendCommand = command.map(x => parseInt(Number(x.trim()) as any, 10) || 0) as any\n    this.writeToDevice(device, sendCommand)\n  }\n\n  toggleDeviceConnection(device: IDeviceMeta): boolean {\n    const stringRef = getDeviceLabel(device)\n    const deviceMatch = this.listeners.find(xDevice => devicesMatch(device, xDevice.meta))\n    const controller = this.deviceToController( device );\n    (controller as any).subscribed = !deviceMatch\n    \n    if(!deviceMatch){\n      this.log({\n        message: `🦻 requesting web socket listen to ${stringRef}`\n      })\n  \n      this.wssSend(SocketMessageType.LISTENTODEVICE, device)\n  \n      if (device === testController) {\n        this.handleMessage({\n          type: SocketMessageType.LISTENERS,\n          data: {\n            devices: this.devices,\n            controllers: this.controllers,\n            event: {message:'test-event'},\n            device\n          }\n        })\n      }\n  \n      return true\n    }\n\n    this.log({\n      message: `Unsubscribed from ${stringRef}`\n    })\n\n    this.wssSend(SocketMessageType.UNSUBSCRIBEDEVICE, device)\n    return false\n  }\n\n  listenToDevice(device: IDeviceMeta) {\n    // console.log('device', device)\n    const stringRef = getDeviceLabel(device)\n\n    this.log({\n      message: `👂 attempting listen to ${stringRef}...`, device\n    })\n\n    const savedControllers =  Object.values(this.savedControllers).reduce((all, current) => [...all,...Object.values(current)], [])\n    const savedController = savedControllers.find(\n      xSaved => devicesMatch(device, xSaved.meta)\n    )\n\n    if (savedController) {\n      this.savedController = savedController\n    }\n\n    // already connected so disconnect?\n    this.toggleDeviceConnection(device)\n  }\n\n  deviceToController(device: IDeviceMeta) {\n    return this.controllers.find(control => devicesMatch(device, control))\n  }\n\n  error(error: any, ...extra) {\n    if (typeof error === 'string') {\n      error = new Error(error)\n    }\n    const readable = ack.error(error).toObject()\n    this.debug.lastLogs.error = {...readable, ...error, ...extra.reduce((all, one) => ({...all, ...one}), {})}\n    // console.log('lastLogs.error updated')\n    console.error({error, ...extra})\n  }\n\n  warn(...data: any) {\n    this.debug.lastLogs.info = data\n    console.warn(data)\n  }\n\n  log(...data: any) {\n    this.debug.lastLogs.info = data\n\n    if (data[0].message) {\n      return console.log(data[0].message, data)\n    }\n\n    console.log(data)\n  }\n\n  stringUpdateSavedController(newData: string) {\n    this.savedController = JSON.parse(newData)\n    this.saveController(this.savedController)\n    this.listeners.forEach(listener => {\n      if ( devicesMatch(listener.meta, this.savedController.meta) ) {\n        Object.assign(listener, this.savedController)\n      }\n    })\n  }\n\n  toggleIgnoreDeviceBit(item: IDeviceMetaState, index: number) {\n    console.log(0, item, index)\n    item.ignoreBits = item.ignoreBits || []\n    \n    const ignoreIndex = item.ignoreBits.indexOf(index)\n    \n    if (ignoreIndex === -1) {\n      item.ignoreBits.push(index)\n      console.log(1, item.ignoreBits)\n      return\n    }\n    \n    item.ignoreBits.splice(ignoreIndex, 1)\n    console.log(2, item.ignoreBits)\n  }\n\n  downloadController(controller: DeviceProductLayout) {\n    const filename = getDeviceLabel(controller.meta) + '.json'\n    const data = JSON.stringify(controller, null, 2)\n    download(filename, data)\n  }\n\n  copyController(controller: DeviceProductLayout) {\n    copyText(JSON.stringify(controller, null, 2))\n  }\n\n  removeKeyFromMap(key: string, map: IDeviceMetaState) {\n    delete map[key]\n  }\n\n  changeMapKeyName(key: string, newKey: string, map: IDeviceMetaState) {\n    map[newKey] = map[key]\n    delete map[key]\n  }\n}\n\nfunction controllerSaveFormat(controller: IDeviceMetaState) {\n  const saveData = { ...controller }\n  delete saveData.lastEvent\n  delete saveData.subscribed\n  delete saveData.recording\n  delete saveData.pressed\n  return saveData\n}\n\n/*function hexEncode(string){\n  var hex, i;\n\n  var result = \"\";\n  for (i=0; i < string.length; i++) {\n      hex = string.charCodeAt(i).toString(16);\n      result += (\"000\"+hex).slice(-4);\n  }\n\n  return result\n}*/","<style>\n  textarea.code {\n    height:500px;width:100%;/*max-width: 500px;*/\n    min-width:300px;\n  }\n</style>\n\n<div *ngIf=\"connection?.readyState !== 1\" class=\"bg-warning pad flex-apart\">\n  <span>\n    ⚠️ Not connected to websocket server\n  </span>\n  <a (click)=\"reconnect()\">🔄</a>\n</div>\n\n<div class=\"flex-wrap child-pad-xs child-margin-xs\">\n  <div class=\"flex-1 border border-radius-10\">\n    <h3>🕹 Choose Controller</h3>\n    <p>\n      <button type=\"button\" (click)=\"addTestController()\">add test controller</button>\n    </p>\n    <div class=\"flex-wrap\">\n      <a *ngFor=\"let item of controllers\" class=\"flex1 block margin-xxs pad-xs border-1 radius-5 text-center\"\n        (click)=\"listenToDevice(item)\"\n        [style.background-color] = \"item.subscribed && 'blue'\"\n        [style.color] = \"item.subscribed && 'white'\"\n      >\n        {{ item.product || item.productId + ':' + item.vendorId }}\n        <div class=\"text-xs\">{{ item.manufacturer }}</div>\n      </a>\n    </div>\n    <a class=\"text-center block pad\" (click)=\"debug.controllers = !debug.controllers\"\n      [class]=\"debug.controllers ? 'bg-energized' : 'bg-calm'\"\n    >🐛 debug json</a>\n    <textarea *ngIf=\"debug.controllers\" class=\"code\" wrap=\"off\" disabled\n    >{{controllers | json}}</textarea>\n  </div>\n\n  <div *ngIf=\"listeners.length\" class=\"flex2 border border-radius-10\">\n    <div *ngFor=\"let device of listeners\">\n      <h4>{{ device.meta.product || device.meta.productId + ':' + device.meta.vendorId }}</h4>\n      \n      <textarea class=\"code\" wrap=\"off\" [style.height.em]=\"25 * listeners.length\"\n        (change)=\"stringUpdateSavedController($event.target.value)\"\n      >{{ device | json }}</textarea>\n      \n      <div class=\"flex-wrap flex-valign-center child-margin-xxs\">\n        <button class=\"flex1\" (click)=\"saveController(device)\"\n        >💾 save</button>\n\n        <button class=\"flex1\" *ngIf=\"device.lastEvent\" (click)=\"device.idle = device.lastEvent\"\n        >capture idle</button>\n\n        <button class=\"flex1\" *ngIf=\"device.idle\" [class.bg-warning]=\"device.recording\" (click)=\"toggleDeviceRecord(device)\"\n        >🎤 record</button>\n\n        <button class=\"flex1\" (click)=\"device.map = {}\"\n        >↩️ reset</button>\n      </div>\n\n      <!-- visual bit map -->\n      <h4>📍 button bit map</h4>\n      <div class=\"flex-wrap flex-valign-center child-margin-1 child-pad-xxs\">\n        <div *ngFor=\"let value of device.lastEvent;let index=index\"\n          class=\"border radius-5 cursor-pointer flex-1 text-center\"\n          [class.bg-danger] = \"device.ignoreBits?.includes(index)\"\n          (click) = \"toggleIgnoreDeviceBit(device, index)\"\n        >{{'000' + value | slice : -3}}</div>\n      </div>\n\n      <!-- visual button map -->\n      <h4>📍 button name map</h4>\n      <div class=\"flex-wrap child-margin-xxs\">\n          <ng-container *ngFor=\"let button of device.map | keyvalue\">\n            <div class=\"flex flex-1\">\n              <input class=\"flex1 flex-valign-center flex-center border pad-xxs border-right-0 radius-right-0\"\n                [class.bg-energized]=\"button.value.pressed\"\n                [value]=\"button.key\"\n                (change)=\"changeMapKeyName(button.key, $event.target.value, device.map)\"\n              />\n              <a class=\"hover-bg-assertive block border-1 radius-right-5 pad-xxs\" type=\"button\"\n                (click)=\"removeKeyFromMap(button.key, device.map)\"\n              >🗑</a>\n            </div>\n          </ng-container>\n      </div>\n\n      <div>\n        <div class=\"flex-wrap flex-valign-center\">\n          <h3>writeToDevice</h3><sup class=\"opacity-half pad-left\">(beta)</sup>\n        </div>\n        <div class=\"child-pad child-margin\">\n          <input type=\"text\" [value]=\"command\" placeholder=\"comma separated\"\n            (change)=\"command = $event.target.value\"\n          />\n          <button type=\"button\" (click)=\"writeToDeviceByString(device, command.split(','))\">send</button>\n        </div>\n      </div>\n\n      <div *ngIf=\"device.meta.product.toLowerCase().search('relay') >= 0\" class=\"child-margin flex-wrap flex-center\">\n        <div>\n          <a class=\"border radius-5 pad-xs margin-xs\" (click)=\"writeToDevice(device, relayOn[0])\">all on</a>\n          <a class=\"border radius-5 pad-xs margin-xs\" (click)=\"writeToDevice(device, relayOff[0])\">all off</a>\n        </div>\n        <div *ngFor=\"let pos of [1,2,3,4,5,6,7,8]\">\n          <a class=\"border radius-5 pad-xs margin-xs\" (click)=\"writeToDevice(device, relayOn[pos])\">{{ pos }} on</a>\n          <a class=\"border radius-5 pad-xs margin-xs\" (click)=\"writeToDevice(device, relayOff[pos])\">{{ pos }} off</a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex2 border border-radius-10\">\n    <h4>🎧 ⌨️ Other Devices</h4>\n    <div class=\"flex-wrap\">\n      <button *ngFor=\"let item of nonControllers\"\n        type=\"button\" class=\"margin-xxs flex1\" (click)=\"listenToDevice(item)\"\n        [style.background-color] = \"item.subscribed && 'blue'\"\n        [style.color] = \"item.subscribed && 'white'\"\n      >\n        {{ item.product || item.productId + ':' + item.vendorId }}\n      </button>\n    </div>\n    <a class=\"block pad text-center\" (click)=\"debug.devices = !debug.devices\"\n      [class]=\"debug.devices ? 'bg-energized' : 'bg-calm'\"\n    >🐛 debug json</a> \n    <textarea *ngIf=\"debug.devices\" class=\"code\" wrap=\"off\" disabled\n    >{{nonControllers | json}}</textarea>\n  </div>\n\n  <div class=\"flex1 border border-radius-10\">\n    <h4>💾 Saved Controllers</h4>\n    <div class=\"flex-wrap\">\n      <ng-container *ngFor=\"let vendor of savedControllers | keyvalue\">\n        <button *ngFor=\"let item of vendor.value | keyvalue\" type=\"button\" class=\"margin-xxs flex-1\"\n          (click)=\"savedController = item.value\"\n          [style.background-color] = \"savedController === item.value && 'blue' || null\"\n          [style.color] = \"savedController === item.value && 'white' || null\"\n        >\n          {{ item.value.meta.product || item.value.meta.productId + ':' + item.value.meta.vendorId }}\n        </button>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"flex1 border border-radius-10\" *ngIf=\"savedController\">\n    <h3>Saved Controller: {{ savedController.meta.product || savedController.meta.productId + ':' + item.value.meta.vendorId }}</h3>\n    <p>Details of past connected and saved controllers</p>\n    <textarea class=\"code\" wrap=\"off\"\n      (change)=\"stringUpdateSavedController(savedController, $event.target.value)\"\n    >{{savedController | json}}</textarea>\n    <button (click)=\"saveControllers()\">save</button>\n    <button (click)=\"downloadController(savedController)\">download</button>\n    <button (click)=\"copyController(savedController)\">copy</button>\n    <button (click)=\"confirmDeleteController(savedController)\">delete</button>\n  </div>\n\n  <div *ngIf=\"debug.lastLogs.error\" class=\"flex2 border border-radius-10 bg-warning\">\n    <h3>Recent error occurred</h3>\n    <p *ngIf=\"debug.lastLogs.error.message\">{{debug.lastLogs.error.message}}</p>\n    <textarea class=\"code\" disabled>{{debug.lastLogs.error | json}}</textarea>\n  </div>\n\n</div>\n<!-- audio element for when change occurs -->\n<div class=\"flex-stacked flex-center pad text-xs\" title=\"feedback audio is when a device change occurs an audio file will be played\">\n  <div>🔊 test feedback audio</div>\n  <audio id=\"buttonChangeAudio\" controls width=\"100\" height=\"100\">\n    <source src=\"assets/LOZ_Get_Heart.wav\">\n  </audio>\n  <div class=\"opacity-70 text-xxs\">some devices require playing above audio one time before feedback audio will work</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","var map = {\n\t\"./locale\": \"bCXH\",\n\t\"./locale.js\": \"bCXH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ZPnb\";","export const relayOn = [\n  [0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFF, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n];\n\nexport const relayOff = [\n  [0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n  [0x00, 0xFD, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n]","/** Files in here must be browser safe */\n\nimport { Device, HID } from \"node-hid\";\nimport { ControllerConfigs, DeviceProductLayout, IButtonState, IDeviceMeta } from \"./typings\";\n\nexport function getControlConfigByDevice(configs: ControllerConfigs, device: IDeviceMeta) {\n  const vendorId = String(device.vendorId)\n  const productId = String(device.productId)\n  const products = configs[vendorId]\n\n  if (!products) {\n    return\n  }\n\n  return products[productId]\n\n}\n\nexport function savedControllerToConfigs(\n  controller: DeviceProductLayout,\n  controlConfigs: ControllerConfigs = {}\n) {\n  const {vendorId, productId} = controller.meta\n  const vendorOb = controlConfigs[vendorId] = controlConfigs[vendorId] || {}\n\n  vendorOb[productId] = controller\n\n  return controlConfigs\n}\n\n\nexport function isDeviceEventsSame(\n  device: DeviceProductLayout, event0: number[], event1: number[]\n): boolean {\n  const castedEvent0 = cleanseDeviceEvent(device, event0)\n  const castedEvent1 = cleanseDeviceEvent(device, event1)\n  return eventsMatch(castedEvent0, castedEvent1)\n}\n\nexport function eventsMatch(event0: number[], event1: number[]) {\n  return event0.every((item,index) => item === event1[index])\n}\n\nexport function cleanseDeviceEvent(\n  device: DeviceProductLayout,\n  event: number[]\n) {\n  return event.map((number, index) =>\n    cleanseDeviceEventPos(device, number, index)\n  )\n}\n\nfunction cleanseDeviceEventPos(\n  device: DeviceProductLayout, number: number, index: number\n){\n  return device.ignoreBits?.includes(index) ? 0 : number\n}\n\nexport function devicesMatch(device: IDeviceMeta, lDevice: IDeviceMeta): boolean {\n  if ( device === lDevice ) {\n    return true // exact match\n  }\n\n  return device.path === lDevice.path\n  /*\n  device.productId === lDevice.productId && device.vendorId === lDevice.vendorId\n  && device.manufacturer === lDevice.manufacturer\n  && device.product === lDevice.product\n  */\n}\n\nexport function isDeviceController(device: Device): boolean {\n  if ((device.usage === 5 && device.usagePage === 1)\n  || (device.usage === 4 && device.usagePage === 1)) {\n    return true\n  }\n\n  if (!device.product) {\n    return false\n  }\n\n  return device.product.toLowerCase().indexOf(\"controller\") >= 0\n  || device.product.toLowerCase().indexOf(\"game\") >= 0\n  || device.product.toLowerCase().indexOf(\"joystick\") >= 0\n}\n\nexport function getDeviceLabel(device: IDeviceMeta) {\n  let stringRef = device.product?.trim() || ''\n\n  if (device.manufacturer) {\n    stringRef += ' by '+ device.manufacturer\n  }\n\n  return stringRef\n}\n\n/** returns every combination of combing positions of an array */\nexport function sumSets<T,W>(\n  numsToSum: W[],\n  $sum: (items: W[], index?: number) => T = (items: any[]) => items.reduce((a,b) => a + b, 0)\n): {sums: T[], sets: W[][]} {\n  var sums: T[] = [] // every possible sum (typically single number value)\n  var sets: W[][] = [] // each index matches sums (the items in sum)\n\n  getCombinations(numsToSum).forEach(read => {\n    const total = $sum(read)// read.reduce($sum as any, startValue) as any\n    sums.push(total) // record result of combing\n    sets.push(read.slice()) // clone read array\n  })\n  /*\n  function SubSets(\n    read: W[], // starts with no values\n    queued: W[] // starts with all values\n  ) {\n    if (read.length) {\n      const total = $sum(read)// read.reduce($sum as any, startValue) as any\n      sums.push(total) // record result of combing\n      sets.push(read.slice()) // clone read array\n    }\n\n    if (read.length > 1) {\n      SubSets(read.slice(1), [])\n    }\n\n    if (queued.length === 0) {\n      return\n    }\n\n    const next = queued[0]\n\n    const left = queued.slice(1)\n    const newReads = [...read, next]\n    SubSets(newReads, left) // move one over at a time\n  }\n\n  // igniter\n  SubSets([], numsToSum)\n  */\n  return {sums, sets}\n}\n\n/** a map of all possible button presses */\nexport function getPressMapByController(controller: DeviceProductLayout): PressMap {\n  const data = Object.entries(controller.map)\n  const idle = controller.idle ? controller.idle : [0,0,0,0,0,0,0,0]\n\n  const results = sumSets(data,\n    (items: [string, IButtonState][]) => {\n      const idleClone = idle.slice()\n      const processor = (set: [string, IButtonState]) => {\n        const item = set[1]\n        idleClone[item.pos] = idleClone[item.pos] + item.value - item.idle\n      }\n      items.forEach(processor)\n      return idleClone\n    }\n  )\n\n  const namedSets = results.sets.map(item => item.map(btn => btn[0])) as any\n  const output = results.sums.reduce((all, now, index) => {\n    all[now.join(' ')] = namedSets[index]\n    return all\n  },{} as PressMap)\n\n  output[idle.join(' ')] = []\n\n  return output\n}\n\ninterface PressMap {\n  [bits: string]: string[]\n}\n\nfunction getCombinations<T>(valuesArray: T[]): T[][] {\n  const combi = []\n  const slent = Math.pow(2, valuesArray.length)\n\n  for (var i = 0; i < slent; i++) {\n    const temp = []\n    for (var j = 0; j < valuesArray.length; j++) {\n      if ((i & Math.pow(2, j))) {\n        temp.push(valuesArray[j])\n      }\n    }\n\n    if (temp.length > 0) {\n      combi.push(temp)\n    }\n  }\n\n  return combi\n}","import { sumSets } from './index.utils'\nimport { ButtonsMap, DeviceProductLayout, IButtonState } from './typings'\n\nexport default decodeDeviceMetaState\n\n/** runtime decode button presses\n * - Todo: More performance using a map of all possible presses instead of using this\n*/\nexport function decodeDeviceMetaState(\n  metaState: DeviceProductLayout,\n  event: number[] // 8 bits\n): string[] {\n  if (!metaState.map || !event) {\n    return []\n  }\n\n  const changedMap: ButtonStates = getButtonMapByEvent(metaState.map, event)\n\n  return Object.keys(changedMap).filter((buttonName) => {\n    const current = changedMap[buttonName]\n    const currentPos = current.pos\n    const seekValue: number = event[currentPos]\n\n    // does another matching position have an exact match?\n    const otherHasExact = Object.values(changedMap)\n      .find(btnMap => btnMap.pos === currentPos && btnMap !== current && btnMap.value === seekValue)\n    if (otherHasExact) {\n      return false\n    }\n\n    // direct value match\n    if (current.value === seekValue) {\n      return true\n    }\n\n    // items on the same pos\n    const alikes = getSamePosButtons(buttonName, changedMap)\n\n    // combined value match\n    const match = findButtonCombo(alikes, current, {changedMap, seekValue})\n\n    if (match) {\n      return true\n    }\n\n    return false\n  })\n}\n\nexport function getSamePosButtons(buttonName: string, changedMap: ButtonStates) {\n  return Object.keys(changedMap)\n  .filter(otherBtnName => {\n    if (otherBtnName === buttonName) {\n      return false\n    }\n\n    if (changedMap[otherBtnName].pos !== changedMap[buttonName].pos) {\n      return false\n    }\n\n    return true\n  })\n}\n\n/** determines if multiple button pressed  */\nexport function findButtonCombo(\n  alikes: string[], // two or more button names\n  current: IButtonState,\n  {changedMap, seekValue}: {\n    changedMap: {[buttonName: string]: IButtonState}\n    seekValue: number\n  }\n): boolean {\n  if (!alikes.length) {\n    return false\n  }\n\n  const x: IButtonState[] = [current]\n\n  alikes.forEach(name => {\n    x.push( changedMap[name] )\n  })\n\n  const results = sumSets(x, (b: IButtonState[]) => {\n    return b.reduce((a,b) => a + b.value - current.idle, 0)\n  }) // get every possible combination\n\n  return results.sets.find((items, index) => {\n    // remove all singular possible combinations\n    if (items.length === 1) {\n      const isTheCurrentOne = items[0].value === current.value || items[0].value === current.value + current.idle\n      if (!isTheCurrentOne) {\n        return false\n      }\n    }\n\n    // possible set must include current value\n    if (!items.includes(current)) {\n      return false\n    }\n\n    if (seekValue === results.sums[index]) {\n      return true\n    }\n  }) !== undefined\n}\n\ninterface ButtonStates {\n  [buttonName: string]: IButtonState\n}\n\nfunction getButtonMapByEvent(\n  map: ButtonsMap,\n  currentBits: number[] // length === 8\n): ButtonStates {\n  return currentBits.reduce((all, current, index) => {\n    Object.keys(map)\n      .filter((buttonName) =>\n        map[buttonName].pos === index && map[buttonName].idle !== current\n      )\n      .forEach((buttonName: string) => all[buttonName] = map[buttonName])\n\n      return all\n  }, {} as ButtonStates)\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}